{
  "backend.etcd": {
    "declarations": [
      {
        "channelPath": "/modules/terraform/backends.nix",
        "path": "modules/terraform/backends.nix",
        "url": "https://github.com/terranix/terranix/tree/master/modules/terraform/backends.nix"
      }
    ],
    "default": null,
    "description": "etcd backend\nhttps://www.terraform.io/docs/backends/types/etcd.html\n",
    "loc": ["backend", "etcd"],
    "readOnly": false,
    "type": "null or submodule"
  },
  "backend.etcd.endpoints": {
    "declarations": [
      {
        "channelPath": "/modules/terraform/backends.nix",
        "path": "modules/terraform/backends.nix",
        "url": "https://github.com/terranix/terranix/tree/master/modules/terraform/backends.nix"
      }
    ],
    "description": "A space-separated list of the etcd endpoints\n",
    "loc": ["backend", "etcd", "endpoints"],
    "readOnly": false,
    "type": "string"
  },
  "backend.etcd.password": {
    "declarations": [
      {
        "channelPath": "/modules/terraform/backends.nix",
        "path": "modules/terraform/backends.nix",
        "url": "https://github.com/terranix/terranix/tree/master/modules/terraform/backends.nix"
      }
    ],
    "default": null,
    "description": "the password\n",
    "loc": ["backend", "etcd", "password"],
    "readOnly": false,
    "type": "null or string"
  },
  "backend.etcd.path": {
    "declarations": [
      {
        "channelPath": "/modules/terraform/backends.nix",
        "path": "modules/terraform/backends.nix",
        "url": "https://github.com/terranix/terranix/tree/master/modules/terraform/backends.nix"
      }
    ],
    "description": "The path where to store the state\n",
    "loc": ["backend", "etcd", "path"],
    "readOnly": false,
    "type": "string"
  },
  "backend.etcd.username": {
    "declarations": [
      {
        "channelPath": "/modules/terraform/backends.nix",
        "path": "modules/terraform/backends.nix",
        "url": "https://github.com/terranix/terranix/tree/master/modules/terraform/backends.nix"
      }
    ],
    "default": null,
    "description": "the username\n",
    "loc": ["backend", "etcd", "username"],
    "readOnly": false,
    "type": "null or string"
  },
  "backend.local": {
    "declarations": [
      {
        "channelPath": "/modules/terraform/backends.nix",
        "path": "modules/terraform/backends.nix",
        "url": "https://github.com/terranix/terranix/tree/master/modules/terraform/backends.nix"
      }
    ],
    "default": null,
    "description": "local backend\nhttps://www.terraform.io/docs/backends/types/local.html\n",
    "loc": ["backend", "local"],
    "readOnly": false,
    "type": "null or submodule"
  },
  "backend.local.path": {
    "declarations": [
      {
        "channelPath": "/modules/terraform/backends.nix",
        "path": "modules/terraform/backends.nix",
        "url": "https://github.com/terranix/terranix/tree/master/modules/terraform/backends.nix"
      }
    ],
    "description": "path to the state file\n",
    "loc": ["backend", "local", "path"],
    "readOnly": false,
    "type": "string"
  },
  "backend.s3": {
    "declarations": [
      {
        "channelPath": "/modules/terraform/backends.nix",
        "path": "modules/terraform/backends.nix",
        "url": "https://github.com/terranix/terranix/tree/master/modules/terraform/backends.nix"
      }
    ],
    "default": null,
    "description": "s3 backend\nhttps://www.terraform.io/docs/backends/types/s3.html\n",
    "loc": ["backend", "s3"],
    "readOnly": false,
    "type": "null or submodule"
  },
  "backend.s3.bucket": {
    "declarations": [
      {
        "channelPath": "/modules/terraform/backends.nix",
        "path": "modules/terraform/backends.nix",
        "url": "https://github.com/terranix/terranix/tree/master/modules/terraform/backends.nix"
      }
    ],
    "description": "bucket name\n",
    "loc": ["backend", "s3", "bucket"],
    "readOnly": false,
    "type": "string"
  },
  "backend.s3.key": {
    "declarations": [
      {
        "channelPath": "/modules/terraform/backends.nix",
        "path": "modules/terraform/backends.nix",
        "url": "https://github.com/terranix/terranix/tree/master/modules/terraform/backends.nix"
      }
    ],
    "description": "path to the state file in the bucket\n",
    "loc": ["backend", "s3", "key"],
    "readOnly": false,
    "type": "string"
  },
  "backend.s3.region": {
    "declarations": [
      {
        "channelPath": "/modules/terraform/backends.nix",
        "path": "modules/terraform/backends.nix",
        "url": "https://github.com/terranix/terranix/tree/master/modules/terraform/backends.nix"
      }
    ],
    "description": "region of the bucket\n",
    "loc": ["backend", "s3", "region"],
    "readOnly": false,
    "type": "string"
  },
  "data": {
    "declarations": [
      {
        "channelPath": "/core/terraform-options.nix",
        "path": "core/terraform-options.nix",
        "url": "https://github.com/terranix/terranix/tree/master/core/terraform-options.nix"
      }
    ],
    "default": {},
    "description": "Data objects, are queries to use resources which\nare already exist, as if they are created by a the resource\noption.\nSee for more details : https://www.terraform.io/docs/configuration/data-sources.html\n",
    "example": {},
    "loc": ["data"],
    "readOnly": false,
    "type": ""
  },
  "locals": {
    "declarations": [
      {
        "channelPath": "/core/terraform-options.nix",
        "path": "core/terraform-options.nix",
        "url": "https://github.com/terranix/terranix/tree/master/core/terraform-options.nix"
      }
    ],
    "default": {},
    "description": "Define terraform variables with file scope.\nLike modules this is terraform intern and terranix has better ways.\nSee for more details : https://www.terraform.io/docs/configuration/locals.html\n",
    "example": {
      "locals": {
        "owner": "Community Team",
        "service_name": "forum"
      }
    },
    "loc": ["locals"],
    "readOnly": false,
    "type": ""
  },
  "module": {
    "declarations": [
      {
        "channelPath": "/core/terraform-options.nix",
        "path": "core/terraform-options.nix",
        "url": "https://github.com/terranix/terranix/tree/master/core/terraform-options.nix"
      }
    ],
    "default": {},
    "description": "A terraform module, to define multiple resources,\nfor sharing or duplication.\nThe terraform module system, and has nothing to\ndo with the module system of terranix or nixos.\nSee for more details : https://www.terraform.io/docs/configuration/modules.html\n",
    "example": {
      "module": {
        "consul": {
          "source": "github.com/hashicorp/example"
        }
      }
    },
    "loc": ["module"],
    "readOnly": false,
    "type": ""
  },
  "output": {
    "declarations": [
      {
        "channelPath": "/core/terraform-options.nix",
        "path": "core/terraform-options.nix",
        "url": "https://github.com/terranix/terranix/tree/master/core/terraform-options.nix"
      }
    ],
    "default": {},
    "description": "Useful in combination with terraform_remote_state.\nSee for more details : https://www.terraform.io/docs/configuration/outputs.html\n",
    "example": {
      "output": {
        "instance_ip_addr": {
          "value": "aws_instance.server.private_ip"
        }
      }
    },
    "loc": ["output"],
    "readOnly": false,
    "type": ""
  },
  "provider": {
    "declarations": [
      {
        "channelPath": "/core/terraform-options.nix",
        "path": "core/terraform-options.nix",
        "url": "https://github.com/terranix/terranix/tree/master/core/terraform-options.nix"
      }
    ],
    "default": {},
    "description": "Define you API connection.\nDon't use secrets in here, they will be visible in the nix-store and the resulting\nconfig.tf.json. Instead use terraform variables.\nSee for more details : https://www.terraform.io/docs/configuration/providers.html\nor https://www.terraform.io/docs/providers/index.html\n",
    "example": {
      "provider": {
        "google": {
          "project": "acme-app",
          "region": "us-central1"
        }
      }
    },
    "loc": ["provider"],
    "readOnly": false,
    "type": ""
  },
  "provisioner.privateKeyFile": {
    "declarations": [
      {
        "channelPath": "/modules/provisioner.nix",
        "path": "modules/provisioner.nix",
        "url": "https://github.com/terranix/terranix/tree/master/modules/provisioner.nix"
      }
    ],
    "description": "PrivateKey for provisioning via ssh access\nsee https://www.terraform.io/docs/provisioners/connection.html\n\nThis is an agnostic option, option-authors should use this options\nto implement server provisioning.\n",
    "example": "~/.ssh/id_rsa",
    "loc": ["provisioner", "privateKeyFile"],
    "readOnly": false,
    "type": "string"
  },
  "remote_state.etcd": {
    "declarations": [
      {
        "channelPath": "/modules/terraform/backends.nix",
        "path": "modules/terraform/backends.nix",
        "url": "https://github.com/terranix/terranix/tree/master/modules/terraform/backends.nix"
      }
    ],
    "default": {},
    "description": "etcd remote state\nhttps://www.terraform.io/docs/backends/types/etcd.html\n",
    "loc": ["remote_state", "etcd"],
    "readOnly": false,
    "type": "attribute set of submodules"
  },
  "remote_state.etcd.<name>.endpoints": {
    "declarations": [
      {
        "channelPath": "/modules/terraform/backends.nix",
        "path": "modules/terraform/backends.nix",
        "url": "https://github.com/terranix/terranix/tree/master/modules/terraform/backends.nix"
      }
    ],
    "description": "A space-separated list of the etcd endpoints\n",
    "loc": ["remote_state", "etcd", "<name>", "endpoints"],
    "readOnly": false,
    "type": "string"
  },
  "remote_state.etcd.<name>.password": {
    "declarations": [
      {
        "channelPath": "/modules/terraform/backends.nix",
        "path": "modules/terraform/backends.nix",
        "url": "https://github.com/terranix/terranix/tree/master/modules/terraform/backends.nix"
      }
    ],
    "default": null,
    "description": "the password\n",
    "loc": ["remote_state", "etcd", "<name>", "password"],
    "readOnly": false,
    "type": "null or string"
  },
  "remote_state.etcd.<name>.path": {
    "declarations": [
      {
        "channelPath": "/modules/terraform/backends.nix",
        "path": "modules/terraform/backends.nix",
        "url": "https://github.com/terranix/terranix/tree/master/modules/terraform/backends.nix"
      }
    ],
    "description": "The path where to store the state\n",
    "loc": ["remote_state", "etcd", "<name>", "path"],
    "readOnly": false,
    "type": "string"
  },
  "remote_state.etcd.<name>.username": {
    "declarations": [
      {
        "channelPath": "/modules/terraform/backends.nix",
        "path": "modules/terraform/backends.nix",
        "url": "https://github.com/terranix/terranix/tree/master/modules/terraform/backends.nix"
      }
    ],
    "default": null,
    "description": "the username\n",
    "loc": ["remote_state", "etcd", "<name>", "username"],
    "readOnly": false,
    "type": "null or string"
  },
  "remote_state.local": {
    "declarations": [
      {
        "channelPath": "/modules/terraform/backends.nix",
        "path": "modules/terraform/backends.nix",
        "url": "https://github.com/terranix/terranix/tree/master/modules/terraform/backends.nix"
      }
    ],
    "default": {},
    "description": "local remote state\nhttps://www.terraform.io/docs/backends/types/local.html\n",
    "loc": ["remote_state", "local"],
    "readOnly": false,
    "type": "attribute set of submodules"
  },
  "remote_state.local.<name>.path": {
    "declarations": [
      {
        "channelPath": "/modules/terraform/backends.nix",
        "path": "modules/terraform/backends.nix",
        "url": "https://github.com/terranix/terranix/tree/master/modules/terraform/backends.nix"
      }
    ],
    "description": "path to the state file\n",
    "loc": ["remote_state", "local", "<name>", "path"],
    "readOnly": false,
    "type": "string"
  },
  "remote_state.s3": {
    "declarations": [
      {
        "channelPath": "/modules/terraform/backends.nix",
        "path": "modules/terraform/backends.nix",
        "url": "https://github.com/terranix/terranix/tree/master/modules/terraform/backends.nix"
      }
    ],
    "default": {},
    "description": "s3 remote state\nhttps://www.terraform.io/docs/backends/types/s3.html\n",
    "loc": ["remote_state", "s3"],
    "readOnly": false,
    "type": "attribute set of submodules"
  },
  "remote_state.s3.<name>.bucket": {
    "declarations": [
      {
        "channelPath": "/modules/terraform/backends.nix",
        "path": "modules/terraform/backends.nix",
        "url": "https://github.com/terranix/terranix/tree/master/modules/terraform/backends.nix"
      }
    ],
    "description": "bucket name\n",
    "loc": ["remote_state", "s3", "<name>", "bucket"],
    "readOnly": false,
    "type": "string"
  },
  "remote_state.s3.<name>.key": {
    "declarations": [
      {
        "channelPath": "/modules/terraform/backends.nix",
        "path": "modules/terraform/backends.nix",
        "url": "https://github.com/terranix/terranix/tree/master/modules/terraform/backends.nix"
      }
    ],
    "description": "path to the state file in the bucket\n",
    "loc": ["remote_state", "s3", "<name>", "key"],
    "readOnly": false,
    "type": "string"
  },
  "remote_state.s3.<name>.region": {
    "declarations": [
      {
        "channelPath": "/modules/terraform/backends.nix",
        "path": "modules/terraform/backends.nix",
        "url": "https://github.com/terranix/terranix/tree/master/modules/terraform/backends.nix"
      }
    ],
    "description": "region of the bucket\n",
    "loc": ["remote_state", "s3", "<name>", "region"],
    "readOnly": false,
    "type": "string"
  },
  "resource": {
    "declarations": [
      {
        "channelPath": "/core/terraform-options.nix",
        "path": "core/terraform-options.nix",
        "url": "https://github.com/terranix/terranix/tree/master/core/terraform-options.nix"
      }
    ],
    "default": {},
    "description": "The backbone of terraform and terranix to change and create state.\nSee for more details : https://www.terraform.io/docs/configuration/resources.html\n",
    "example": {
      "resource": {
        "aws_instance": {
          "web": {
            "ami": "ami-a1b2c3d4",
            "instance_type": "t2.micro"
          }
        }
      }
    },
    "loc": ["resource"],
    "readOnly": false,
    "type": ""
  },
  "terraform": {
    "declarations": [
      {
        "channelPath": "/core/terraform-options.nix",
        "path": "core/terraform-options.nix",
        "url": "https://github.com/terranix/terranix/tree/master/core/terraform-options.nix"
      }
    ],
    "default": {},
    "description": "Terraform configuration.\nBut for backends have a look at the terranix options\nbackend.etcd, backend.local and backend.s3.\nSee for more details : https://www.terraform.io/docs/configuration/terraform.html\n",
    "example": {
      "terraform": {
        "backend": {
          "s3": {
            "bucket": "mybucket",
            "key": "path/to/my/key",
            "region": "us-east-1"
          }
        }
      }
    },
    "loc": ["terraform"],
    "readOnly": false,
    "type": ""
  },
  "users": {
    "declarations": [
      {
        "channelPath": "/modules/users.nix",
        "path": "modules/users.nix",
        "url": "https://github.com/terranix/terranix/tree/master/modules/users.nix"
      }
    ],
    "default": {},
    "description": "User management. `users.group.username` is the path.\nAll members in the `admins` group should be able to ssh to servers.\n\nThis is an agnostic option, option-authors should use this options\nto implement server provisioning.\n",
    "example": {
      "admins": {
        "lassuls": {
          "publicKey": "ssh-rsa ABKAB3NzaC1yc2EAAAA.."
        },
        "mrVanDalo": {
          "publicKey": "ssh-rsa AAAAB3NzaC1yc2EAAAA.."
        }
      }
    },
    "loc": ["users"],
    "readOnly": false,
    "type": "attribute set of attribute set of submoduless"
  },
  "users.<name>.<name>.publicKey": {
    "declarations": [
      {
        "channelPath": "/modules/users.nix",
        "path": "modules/users.nix",
        "url": "https://github.com/terranix/terranix/tree/master/modules/users.nix"
      }
    ],
    "default": null,
    "description": "ssh public key of user\n",
    "example": "${ file( ~/.ssh/id_rsa.pub ) }",
    "loc": ["users", "<name>", "<name>", "publicKey"],
    "readOnly": false,
    "type": "null or string"
  },
  "variable": {
    "declarations": [
      {
        "channelPath": "/core/terraform-options.nix",
        "path": "core/terraform-options.nix",
        "url": "https://github.com/terranix/terranix/tree/master/core/terraform-options.nix"
      }
    ],
    "default": {},
    "description": "Input Variables, which can be set by `--var=name` or by environment variables prefixt with `TF_VAR_`.\nUsually used in terraform modules or to ask for API tokens.\nSee for more details : https://www.terraform.io/docs/configuration/variables.html\n",
    "example": {
      "variable": {
        "image_id": {
          "description": "The id of the machine image (AMI) to use for the server.",
          "type": "string"
        }
      }
    },
    "loc": ["variable"],
    "readOnly": false,
    "type": ""
  }
}
